<?xml version="1.0" encoding="UTF-8"?>

<modulo  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:noNamespaceSchemaLocation="../../../../core/setup/schemas/module.xsd"
>

	<info>
		<name>Image Repository - Álbum</name>
		<description>Controla os albuns do imageRepository.</description>
	</info>
	
	<datasources>
	
		<datasource id="album" table="sh_imageRepository">
			<fields>
				<field id="id" 				name="Identificador" 		dataType="string"		required="true" 	primaryKey="true" />
				<field id="idContent" 		name="Conteúdo" 			dataType="string" 		required="true" />
				<field id="idDataSource" 	name="DataSource Alias" 	dataType="string" 		required="true"		primaryName="true" />
				<field id="idCapa" 			name="Capa" 				dataType="string" 		required="false"	 />
				<field id="legenda" 		name="Legenda" 				dataType="string" 		required="false"	/>
				<field id="quantidade" 		name="Total Imagens" 		dataType="integer" 		required="false"	defaultValue="0" />
			</fields>
			
			<addons>
				<imageRepository enabled="false"/>
			</addons>
			
		</datasource>
		
		<datasource id="picture" table="sh_imageRepositoryPicture">
			<fields>
				<field id="id" 				name="Identificador" 	dataType="string"		required="true" 	primaryKey="true" />
				<field id="idRepository" 	name="Repositório" 		dataType="string" 		required="true" />
				<field id="idPicture" 		name="Imagem" 			dataType="image" 		required="true" />
				<field id="idProximo" 		name="Próxima" 			dataType="string" 		required="false" />
				<field id="legenda" 		name="Legenda" 			dataType="string" 		required="false" />
				<field id="primeiro" 		name="Primeira" 		dataType="integer" 		required="false"	defaultValue="2" primaryName="true" />
			</fields>
			
			<addons>
				<imageRepository enabled="false"/>
			</addons>
		</datasource>
		
		<datasource id="viewed" table="sh_imageRepositoryViewed">
			<fields>
				<field id="id" 				name="Identificador" 	dataType="string"		required="true" 	primaryKey="true" />
				<field id="idRepository" 	name="Repositório" 		dataType="string" 		required="true"		primaryName="true" />
				<field id="idProfile" 		name="Profile" 			dataType="string" 		required="true" />
				<field id="times" 			name="Visualizações" 	dataType="integer" 		required="true" />
			</fields>
			
			<addons>
				<publicationHistory enabled="false"/>
				<publicationMetadata enabled="false"/>
				<imageRepository enabled="false"/>
			</addons>
		</datasource>
		
	</datasources>
	
	<dataProviders>
	
		<!-- 
			Carrega um album a partir do seu conteudo e do dataSource
			
			- Preciso colocar o relacionamento com as imagens
		 -->
		<dataProvider id="album_detalhes" dataSource="album" contentProvider="albumDetalhes">
			<relations>
				<relation id="capa" 	dataSource="imageRepository/picture" leftKey="idCapa" dataFormatter="fieldContent" />
				<relation id="imagens" 	dataSource="imageRepository/picture" rightKey="idRepository" dataFormatter="fieldContentMultiple" />
			</relations>
			<filters>
				<filter id="id"	field="id"	operator="equal"	required="true" />
			</filters>
			<sort>
				<by field="primeiro" order="asc" relationPath="imagens" />
			</sort>
		</dataProvider>
	
		<!-- 
			DataProvider responsável por retornar o imageRepository mesmo que ele ainda não tenha sido criado.
			Caso ainda não tenha sido criado este irá criar. 
			Este DataProvider tem um retorno customizado
				Ele irá retornar:
					objeto:imageRepository em caso de sucesso
					false em caso do dataSource não permitir um imageRepository
					null em alguma outra falha
		 -->
		<dataProvider id="getAlbum" dataSource="album" contentProvider="getAlbum" />
	
		<!-- 
			Carrega um album a partir do seu conteudo e do dataSource
			
			- Preciso colocar o relacionamento com as imagens
		 -->
		<dataProvider id="albumPorConteudo" dataSource="album">
			<relations>
				<relation id="capa" 	dataSource="imageRepository/picture" leftKey="idCapa" dataFormatter="fieldContent" />
				<relation id="imagens" dataSource="imageRepository/picture" rightKey="idRepository" dataFormatter="fieldContentMultiple" />
			</relations>
			<filters>
				<filter id="idContent" 		field="idContent" 		operator="equal" 	required="true" />
				<filter id="idDataSource" 	field="idDataSource" 	operator="equal" 	required="true" />
			</filters>
			<sort>
				<by field="primeiro" order="asc" relationPath="imagens" />
			</sort>
		</dataProvider>
		
		<!-- 
			DataProvider customizado para o renderable de gerenciar. Este irá buscar também o conteúdo em questão independente do dataSource e irá devolver informações próprias para gerar o estilo padrão
		 -->
		<dataProvider id="gerenciarIR" dataSource="album" contentProvider="gerenciarIR" />
		
		
		<!-- 
			Customizo o DataProvider do Viewed para poder buscar sempre por "idRepository" e "idDataSource"
		 -->
		<dataProvider id="viewed_lista" dataSource="viewed">
			<filters>
				<filter id="idRepository" 	field="idRepository" operator="equal" required="true" />
				<filter id="idProfile" 		field="idProfile" operator="equal" required="true" />
			</filters>
			<maxRows>1</maxRows>
		</dataProvider>

		<!-- 
			DataProvider para trazer a ultima imagem de um album.
			Este serve para podermos capturar a imagem com idProximo=NULL para que consigamos cadastrar novas imagens
		 -->
		<dataProvider id="ultimaImagemDoAlbum" dataSource="picture">
			<filters>
				<filter id="idRepository" 	field="idRepository" 	operator="equal" required="true" />
				<filter id="idProximo" 		field="idProximo" 		operator="isNull" required="false" defaultValue="filtrarSempre" />
			</filters>
			<maxRows>1</maxRows>
		</dataProvider>
		
		<!-- 
			DataProvider para buscar imagens específicas pelos seus ids e trago consigo a sua proxima imagem
					Faço isso para pegar o idProximo do proximo
			Faço esse dataProvider para conseguir reposicionar as iamgens
		 -->
		<dataProvider id="getImagensPorId" dataSource="picture">
			<relations>
				<relation id="proxima" dataSource="imageRepository/picture" leftKey="idProximo" />
			</relations>
			<filters>
				<filter id="id" 	field="id" 	operator="in" required="true" />
			</filters>
		</dataProvider>
		
	</dataProviders>
	
	<renderables>
	
		<!-- 
			Renderable principal para gerenciar o IR
		 -->
		<renderable id="gerenciar">
			<dataProviders>
				<dataProvider id="gerenciarIR" />
			</dataProviders>
			<styles>
				<style id="gerenciarIR" path="gerenciarIR.php"/>
			</styles>
		</renderable>
		
		<!-- 
			Renderable para alterar a legenda de uma foto
		 -->
		<renderable id="alterarLegenda">
			<dataProviders>
				<dataProvider id="picture_detalhes" />
			</dataProviders>
			<styles>
				<style id="alterarLegenda" path="alterarLegenda.php"/>
			</styles>
		</renderable>
	
	</renderables>
	
	<actionHandlers>
	
		<!-- 
			ActionHandler customizado para inserir um novo album 
		-->
		<actionHandler id="album_add" datasource="album" action="criarAlbum" />
		
		<!-- 
			ActionHandler customizado para cadastrar imagem e esse recalcular as informações do album
		-->
		<actionHandler id="picture_add" datasource="picture" action="adicionarImagem" />
		
		<!-- 
			ActionHandler para reposicionar uma imagem no album
			Este espera os seguintes parametros: "idImagem", "idReferencia", "idAnterior"
		-->
		<actionHandler id="reposicionarImagem" datasource="picture" action="reposicionarImagem" />
		
		<!-- 
			ActionHandler que serve para marcar uma imagem como capa do seu album
		-->
		<actionHandler id="marcarCapa" datasource="picture" action="marcarCapa" />

		<!-- 
			ActionHandler para remover uma imagem do album. Reposiciono as imagens referentes a ela. Não deixo excluir a capa do album
		-->
		<actionHandler id="picture_delete" datasource="picture" action="removerImagem" />
		
		<!-- 
			ActionHandler para remover todas as imagens do album
		-->
		<actionHandler id="picture_deleteAll" datasource="picture" action="removerTodasImagem" />
	
	</actionHandlers>
	
</modulo>	
